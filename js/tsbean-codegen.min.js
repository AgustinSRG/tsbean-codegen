function findPrimaryKey(e){return 0<e.fields.length?e.fields[0]:""}function javascriptTypeFromEnforced(e){switch(e){case"int":case"number":return"number";case"boolean":return"boolean";case"date":return"Date";default:return"string"}}function defaultValueByType(e){switch(e){case"int":case"number":return"0";case"boolean":return"false";case"date":return"new Date(0)";default:return"''"}}window.toCamelCase=function(e){for(var t="",a=!1,s=0;s<e.length;s++)var n=e.charAt(s),a="_"===n||(t+=a?n.toUpperCase():n.toLowerCase(),!1);return t},window.firstUpper=function(e){return e.charAt(0).toUpperCase()+e.substr(1)},window.generateBeanClass=function(e){var t=[],a=findPrimaryKey(e);t.push("// "+e.name+" - tsbean-orm class (auto generated)"),t.push(""),t.push('"use strict";'),t.push(""),t.push('import { DataModel, enforceType, TypedRow, DataSource, DataFinder, DataFilter, OrderBy, SelectOptions, DataUpdate } from "tsbean-orm";'),t.push(""),t.push("const DATA_SOURCE = DataSource.DEFAULT;"),t.push('const TABLE = "'+e.id+'";'),t.push('const PRIMARY_KEY = "'+toCamelCase(a.name)+'";'),t.push(""),t.push("export class "+e.name+" extends DataModel {"),t.push(""),t.push("    public static finder = new DataFinder<"+e.name+", "+javascriptTypeFromEnforced(a.type)+">(DATA_SOURCE, TABLE, PRIMARY_KEY, (data: TypedRow<"+e.name+">) => { return new "+e.name+"(data) });"),t.push("");for(var s=0;s<e.fields.length;s++){var n=e.fields[s];t.push("    public "+toCamelCase(n.name)+": "+javascriptTypeFromEnforced(n.type)+";")}t.push(""),t.push("    constructor(data: TypedRow<"+e.name+">) {"),t.push("        // First, we call DataModel constructor "),t.push("        super(DATA_SOURCE, TABLE, PRIMARY_KEY);"),t.push(""),t.push("        // Second, we set the class properties"),t.push("        // The recommended way is to set one by one to prevent prototype pollution"),t.push("        // You can also enforce the types if you do not trust the data source"),t.push("        // In that case you can use the enforceType utility function"),t.push("");for(s=0;s<e.fields.length;s++){n=e.fields[s];t.push("        this."+toCamelCase(n.name)+" = enforceType(data."+toCamelCase(n.name)+', "'+n.type+'") || '+defaultValueByType(n.type)+";")}return t.push(""),t.push("        // Finally, we must call init()"),t.push("        this.init();"),t.push("    }"),t.push("}"),t.push(""),t.join("\n")};
window.App=new Vue({el:"#app",data:{inputType:"mysql",inputTypes:[{id:"mysql",name:"MySQL / MariaDB",placeholder:"-- Tables for testing the driver\n\nDROP TABLE IF EXISTS `person`;\nDROP TABLE IF EXISTS `dummy`;\n\nCREATE TABLE `person` (\n    `id` BIGINT NOT NULL PRIMARY KEY,\n    `name` VARCHAR(255) NOT NULL COLLATE utf8_bin,\n    `surname` VARCHAR(255) NOT NULL COLLATE utf8_bin,\n    `age` INT,\n    `has_driver_license` TINYINT(1),\n    `preferences` TEXT,\n    `birth_date` DATE\n);\n\nCREATE TABLE `dummy` (\n    `id` VARCHAR(255) NOT NULL PRIMARY KEY,\n    `value1` BIGINT,\n    `value2` DOUBLE,\n    `value3` VARCHAR(255),\n    `data` TEXT\n);\n\n"},{id:"postgre",name:"PostgreSQL",placeholder:'-- Tables for testing the driver\n\nDROP TABLE IF EXISTS "person";\nDROP TABLE IF EXISTS "dummy";\n\nCREATE TABLE "person" (\n    "id" BIGINT NOT NULL PRIMARY KEY,\n    "name" VARCHAR(255) NOT NULL,\n    "surname" VARCHAR(255) NOT NULL,\n    "age" INT,\n    "has_driver_license" BOOLEAN,\n    "preferences" TEXT,\n    "birth_date" TIMESTAMPTZ\n);\n\nCREATE TABLE "dummy" (\n    "id" SERIAL PRIMARY KEY,\n    "value1" BIGINT,\n    "value2" REAL,\n    "value3" VARCHAR(255),\n    "data" TEXT\n);\n\n'}],inputText:"",outputClass:"",outputClasses:[],outputText:""},methods:{getPlaceholder:function(t){for(var s=0;s<this.inputTypes.length;s++)if(this.inputTypes[s].id===t)return this.inputTypes[s].placeholder;return""},classExists:function(t){for(var s=0;s<this.outputClasses.length;s++)if(this.outputClasses[s].id===t)return!0;return!1},onUpdateInputCode:function(){this.inputText||(this.outputClasses=[],this.outputClass="",this.outputText="");var e=[],s=null,t=new SQLFileParser(function(t,s){e.push({name:t,fields:s})},function(){},function(t){s=t});t.update(this.inputText),t.finish(),s?(this.outputText=s.message,this.outputClasses=[],this.outputClass=""):(this.outputClasses=e.map(function(t){return{id:t.name,name:firstUpper(toCamelCase(t.name)),fields:t.fields}}),this.classExists(this.outputClass)||(0<this.outputClasses.length?this.outputClass=this.outputClasses[0].id:this.outputClass=""),this.onUpdateOutputClass())},onUpdateOutputClass:function(){if(0!==this.outputClasses.length){for(var t=0;t<this.outputClasses.length;t++)if(this.outputClasses[t].id===this.outputClass)return void(this.outputText=generateBeanClass(this.outputClasses[t]));this.outputText=""}}}});